version: "3"
services:
  init:
    command:
    - version
    environment:
      _AIRFLOW_DB_UPGRADE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      AIRFLOW__CORE__PARALLELISM: 256
      AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 256
      AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT: 256
      AIRFLOW__SCHEDULER__PARSING_PROCESSES: 8
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 1
      AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE: 128
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 16
      AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE: 512
      AIRFLOW__CORE__SQL_ALCHEMY_MAX_OVERFLOW: 1024
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD}
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME}
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
      AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      IS_PRIME_ENV: 'true'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW_GID: ${AIRFLOW_GID}
      AIRFLOW_HOME: /opt/airflow
      PYTHONPATH: /opt/airflow/
      LIMES_ALIGNMENT_PATH: /opt/airflow/.limes/limes.jar
      RML_MAPPER_PATH: /opt/airflow/.rmlmapper/rmlmapper.jar
      XML_PROCESSOR_PATH: /opt/airflow/.saxon/saxon-he-10.6.jar
      AIRFLOW_UID: ${AIRFLOW_UID}
    image: ${AIRFLOW_IMAGE_URI}
    logging:
      driver: awslogs
      options:
        awslogs-group: /ecs/airflow-cluster-master-task/
        awslogs-region: ${REGION}
        awslogs-stream-prefix: ecs
    networks:
      ecs-local-network: null
    volumes:
      - "dags:/opt/airflow/dags"
      - "logs:/opt/airflow/logs"
      - "ted_sws:/opt/airflow/ted_sws"

  scheduler:
    command:
    - scheduler
    environment:
      AIRFLOW__CORE__PARALLELISM: 256
      AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 256
      AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT: 256
      AIRFLOW__SCHEDULER__PARSING_PROCESSES: 8
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 1
      AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE: 128
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 8
      AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE: 512
      AIRFLOW__CORE__SQL_ALCHEMY_MAX_OVERFLOW: 1024
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      IS_PRIME_ENV: 'true'
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
      AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW_GID: ${AIRFLOW_GID}
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      PYTHONPATH: /opt/airflow/
      LIMES_ALIGNMENT_PATH: /opt/airflow/.limes/limes.jar
      RML_MAPPER_PATH: /opt/airflow/.rmlmapper/rmlmapper.jar
      XML_PROCESSOR_PATH: /opt/airflow/.saxon/saxon-he-10.6.jar
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    image: ${AIRFLOW_IMAGE_URI}
    logging:
      driver: awslogs
      options:
        awslogs-group: /ecs/airflow-cluster-master-task/
        awslogs-region: ${REGION}
        awslogs-stream-prefix: ecs
    networks:
      ecs-local-network: null
    volumes:
      - "dags:/opt/airflow/dags"
      - "logs:/opt/airflow/logs"
      - "ted_sws:/opt/airflow/ted_sws"
  triggerer:
    command:
    - triggerer
    environment:
      AIRFLOW__CORE__PARALLELISM: 256
      AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 256
      AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT: 256
      AIRFLOW__SCHEDULER__PARSING_PROCESSES: 8
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 1
      AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE: 128
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 16
      AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE: 512
      AIRFLOW__CORE__SQL_ALCHEMY_MAX_OVERFLOW: 1024
      AIRFLOW__WEBSERVER__SECRET_KEY: "zqOVjqVrMstjDbKEPpYiSA=="
      IS_PRIME_ENV: 'true'
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
      AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW_GID: ${AIRFLOW_GID}
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      PYTHONPATH: /opt/airflow/
      LIMES_ALIGNMENT_PATH: /opt/airflow/.limes/limes.jar
      RML_MAPPER_PATH: /opt/airflow/.rmlmapper/rmlmapper.jar
      XML_PROCESSOR_PATH: /opt/airflow/.saxon/saxon-he-10.6.jar
    image: ${AIRFLOW_IMAGE_URI}
    logging:
      driver: awslogs
      options:
        awslogs-group: /ecs/airflow-cluster-master-task/
        awslogs-region: ${REGION}
        awslogs-stream-prefix: ecs
    networks:
      ecs-local-network: null
    volumes:
      - "dags:/opt/airflow/dags"
      - "logs:/opt/airflow/logs"
      - "ted_sws:/opt/airflow/ted_sws"
  webserver:
    command:
    - webserver
    environment:
      AIRFLOW__CORE__PARALLELISM: 256
      AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 256
      AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT: 256
      AIRFLOW__SCHEDULER__PARSING_PROCESSES: 8
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 1
      AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE: 128
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 16
      AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE: 512
      AIRFLOW__CORE__SQL_ALCHEMY_MAX_OVERFLOW: 1024
      AIRFLOW__WEBSERVER__SECRET_KEY: "zqOVjqVrMstjDbKEPpYiSA=="
      IS_PRIME_ENV: 'true'
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
      AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW_GID: ${AIRFLOW_GID}
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      PYTHONPATH: /opt/airflow/
      LIMES_ALIGNMENT_PATH: /opt/airflow/.limes/limes.jar
      RML_MAPPER_PATH: /opt/airflow/.rmlmapper/rmlmapper.jar
      XML_PROCESSOR_PATH: /opt/airflow/.saxon/saxon-he-10.6.jar
    image: ${AIRFLOW_IMAGE_URI}
    logging:
      driver: awslogs
      options:
        awslogs-group: /ecs/airflow-cluster-master-task/
        awslogs-region: ${REGION}
        awslogs-stream-prefix: ecs
    networks:
      ecs-local-network: null
    ports:
    - 8080:8080
    volumes:
      - "dags:/opt/airflow/dags"
      - "logs:/opt/airflow/logs"
      - "ted_sws:/opt/airflow/ted_sws"

  flower:
    command:
    - celery
    - flower
    environment:
      AIRFLOW__CORE__PARALLELISM: 256
      AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 256
      AIRFLOW__CORE__NON_POOLED_TASK_SLOT_COUNT: 256
      AIRFLOW__SCHEDULER__PARSING_PROCESSES: 8
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 1
      AIRFLOW__SCHEDULER__MAX_DAGRUNS_PER_LOOP_TO_SCHEDULE: 128
      AIRFLOW__CELERY__WORKER_CONCURRENCY: 16
      AIRFLOW__CORE__SQL_ALCHEMY_POOL_SIZE: 512
      AIRFLOW__CORE__SQL_ALCHEMY_MAX_OVERFLOW: 1024
      AIRFLOW__WEBSERVER__SECRET_KEY: "zqOVjqVrMstjDbKEPpYiSA=="
      IS_PRIME_ENV: 'true'
      AIRFLOW__API__AUTH_BACKEND: airflow.api.auth.backend.basic_auth
      AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
      AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__ENABLE_XCOM_PICKLING: "true"
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW_GID: ${AIRFLOW_GID}
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: ${AIRFLOW_UID}
      PYTHONPATH: /opt/airflow/
      LIMES_ALIGNMENT_PATH: /opt/airflow/.limes/limes.jar
      RML_MAPPER_PATH: /opt/airflow/.rmlmapper/rmlmapper.jar
      XML_PROCESSOR_PATH: /opt/airflow/.saxon/saxon-he-10.6.jar
    image: ${AIRFLOW_IMAGE_URI}
    labels:
      ecs-local.task-definition-input.type: remote
      ecs-local.task-definition-input.value: airflow-reload-task
    ports:
    - 5555:5555
    logging:
      driver: awslogs
      options:
        awslogs-group: /ecs/airflow-cluster-master-task/
        awslogs-region: ${REGION}
        awslogs-stream-prefix: ecs
    networks:
      ecs-local-network: null
    volumes:
      - "dags:/opt/airflow/dags"
      - "logs:/opt/airflow/logs"
      - "ted_sws:/opt/airflow/ted_sws"

networks:
  ecs-local-network:
    external: true

volumes:
  dags:
  logs:
  ted_sws:
