[tox]
# skipping the setup.py installation/requirement for the moment
skipsdist = true
envlist =
#py37,py38,py39,py310 # skipping multiple python distros for the moment
    py38

[testenv]
description = Running tests in the corresponding environment
passenv = *
deps =
    -rrequirements.txt
    -rrequirements.dev.txt


[testenv:unit]
description = Running UNIT tests in the corresponding environment
#commands =
#   {envpython} -m pytest tests/unit
commands =
    {envpython} -m coverage run -m pytest tests/unit \
    --cov=ted_sws \
    --cov-report=html \
    --cov-report=term \
    --cov-report=xml \
    --junitxml=junit_report.xml \
    -r a \
    -q \
    -v -s \
    --gherkin-terminal-reporter \
    --disable-pytest-warnings
    {envpython} -m coverage xml


[testenv:features]
commands =
    {envpython} -m pytest --alluredir=./tests/reports/allure/test_results/ ./tests/features/
    allure generate --allow-file-access-from-files ./tests/reports/allure/test_results/ --clean -o ./tests/reports/allure/report/
    allure-combine ./tests/reports/allure/report/ --remove-temp-files


[testenv:e2e]
commands =
    {envpython} -m pytest tests/e2e

[testenv:cover]
basepython =
    python3.8
commands =
     coverage run -m pytest
#    --cov-report term \
#    --cov-report html \
#    --cov


[coverage:run]
relative_files = True
source = ted_sws/
branch = True

[pytest]
log_cli = true
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S


addopts =
    --cov=ted_sws
    --cov-report=html
    --cov-report=term
    --cov-report=xml
    --junitxml=junit_report.xml
    -r a
    -q
    -v -s
    --gherkin-terminal-reporter
    --disable-pytest-warnings
    --disable-warnings

junit_family=xunit2

testpaths =
    tests

[testenv:linter]
deps =
    flake8
    flake8-bugbear
    flake8-builtins
    flake8-comprehensions
    flake8-string-format
    black
    pydocstyle
commands =
    flake8
    black --check .
    pydocstyle